const SimonSays={};!function(){"use strict";function t(t,o){if(t.length!==o.length)return!1;for(var n=0,s=t.length;s>n;n++)if(t[n]!==o[n])return!1;return!0}SimonSays.Game=function(t){this.setElement(t),this.board=new SimonSays.Board,this.button=new SimonSays.Button,this.scoreBoard=new SimonSays.Scoreboard,this.background=new SimonSays.Background},SimonSays.Game.prototype={title:"simonSays",document:null,element:null,input:null,paused:!1,oldTime:0,simonPlays:[],humanPlays:[],player:null,round:0,userInterface:null,window:null,constructor:SimonSays.Game,draw:function(){this.background.draw(this.element),this.board.draw(this.document),this.scoreBoard.draw(this.round,this.board)},setElement:function(t){this.element=t,this.document=this.element.ownerDocument,this.window=this.document.defaultView},start:function(){this.player="simon",this.simonPlay()},pause:function(){this.paused=!0},unpause:function(){this.paused=!1},humanPlay:function(t){const o=Number($(t.target).attr("id"));this.humanPlays.push(o),console.log("hello",this.humanPlays,this.simonPlays),this.comparePlays(o)},simonPlay:function(){this.round++,this.humanPlays=[],this.simonPlays.push(Math.floor(4*Math.random())),this.board.play(this.simonPlays),this.scoreBoard.update(this.round)},comparePlays:function(t){const o=t===this.simonPlays[this.humanPlays.length-1];o?this.humanPlays.length===this.simonPlays.length&&(console.log("compare",o),this.simonPlay()):(console.log("Try Again",o),this.humanPlays=[],this.board.play(this.simonPlays))}},SimonSays.Board=function(){this.buttonCount=4,this.boardHtml=document.createElement("div"),this.buttons=[],this.colors=["red","green","yellow","blue"],this.sounds=["https://s3.amazonaws.com/freecodecamp/simonSound1.mp3","https://s3.amazonaws.com/freecodecamp/simonSound2.mp3","https://s3.amazonaws.com/freecodecamp/simonSound3.mp3","https://s3.amazonaws.com/freecodecamp/simonSound4.mp3"]},SimonSays.Board.prototype={draw:function(t){t.body.appendChild(this.boardHtml),this.boardHtml.className="board";for(var o=0;o<this.buttonCount;o++)this.buttons[o]=new SimonSays.Button,this.buttons[o].color=this.colors[o],this.buttons[o].sound=this.sounds[o],this.buttons[o].num=o,this.buttons[o].draw(this.boardHtml);console.log(this)},play:function(t){const o=[],n=this.buttons;t.forEach(function(t){o.push($(n[t].buttonHtml))}),$(o).each(function(t,o){window.setTimeout(function(){$(o).animate({opacity:.25},300).animate({opacity:1},300)},500*t)})}},SimonSays.Button=function(){this.color=null,this.sound=null,this.num=null,this.buttonHtml=document.createElement("div")},SimonSays.Button.prototype={draw:function(t){this.buttonHtml.className="square "+this.color,$(this.buttonHtml).prop("id",this.num),this.buttonHtml.style.backgroundColor=this.color,t.appendChild(this.buttonHtml)}},SimonSays.Scoreboard=function(){this.round=null},SimonSays.Scoreboard.prototype={draw:function(t,o){this.scoreboardHtml=document.createElement("div"),this.scoreboardHtml.className="scoreboard",this.scoreboardHtml.innerHTML=t,o.boardHtml.appendChild(this.scoreboardHtml)},update:function(t){this.scoreboardHtml.innerHTML=t}},SimonSays.Background=function(){this.backgroundUrl="url('img/retina_wood.png')"},SimonSays.Background.prototype={draw:function(t){t.style.backgroundImage=this.backgroundUrl}}}();